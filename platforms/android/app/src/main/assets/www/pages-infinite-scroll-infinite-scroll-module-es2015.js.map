{"version":3,"sources":["./src/app/pages/infinite-scroll/infinite-scroll.page.html","./src/app/pages/infinite-scroll/infinite-scroll-routing.module.ts","./src/app/pages/infinite-scroll/infinite-scroll.module.ts","./src/app/pages/infinite-scroll/infinite-scroll.page.scss","./src/app/pages/infinite-scroll/infinite-scroll.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,uMAAwI,2CAA2C,OAAO,saAAsa,E;;;;;;;;;;;;;;;;;;;ACAtkB;AACc;AAEK;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAMF,IAAa,+BAA+B,GAA5C,MAAa,+BAA+B;CAAG;AAAlC,+BAA+B;IAJ3C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBH;AACM;AACF;AAEA;AAEsC;AAEvB;AACU;AAYtE,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;CAAG;AAA3B,wBAAwB;IAVpC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,+FAA+B;YAC/B,8EAAgB;SACjB;QACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;KACnC,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;ACrBrC;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;ACAvK;AACV;AAQnD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAK7B;QAFA,SAAI,GAAU,KAAK,CAAC,EAAE,CAAC,CAAC;IAER,CAAC;IAEjB,QAAQ;IACR,CAAC;IACD,QAAQ,CAAE,KAAK;QACb,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAExB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,EAAC;gBACxB,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACxB,6CAA6C;gBAC7C,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACpC,OAAO;aACR;YACD,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;YAC5B,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACxB,mEAAmE;QACrE,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;CACF;AAvB+B;IAA7B,+DAAS,CAAC,gEAAiB,CAAC;0DAAmC;AAFrD,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,qPAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAyB9B;AAzB8B","file":"pages-infinite-scroll-infinite-scroll-module-es2015.js","sourcesContent":["export default \"<app-header titulo=\\\"infinite scroll\\\"></app-header>\\n\\n<ion-content padding>\\n\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of data; let i = index\\\">\\n      <ion-label>Item {{i + 1}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n<!--el treshold dice desde cuando en el final empieza a cargar los siguientes elementos-->\\n  <ion-infinite-scroll threshold=\\\"200px\\\"\\n                        (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"dots\\\"\\n      loadingText=\\\"Cargando\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InfiniteScrollPage } from './infinite-scroll.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InfiniteScrollPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InfiniteScrollPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InfiniteScrollPageRoutingModule } from './infinite-scroll-routing.module';\n\nimport { InfiniteScrollPage } from './infinite-scroll.page';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InfiniteScrollPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [InfiniteScrollPage]\n})\nexport class InfiniteScrollPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZmluaXRlLXNjcm9sbC9pbmZpbml0ZS1zY3JvbGwucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { InfiniteScrollPageModule } from './infinite-scroll.module';\n\n@Component({\n  selector: 'app-infinite-scroll',\n  templateUrl: './infinite-scroll.page.html',\n  styleUrls: ['./infinite-scroll.page.scss'],\n})\nexport class InfiniteScrollPage implements OnInit {\n  // el @ViewChild sirve para tomar elementos desde el html y traerlos al backend\n  @ViewChild(IonInfiniteScroll) InfiniteScroll: IonInfiniteScroll;\n  data: any[] = Array(20);\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  loadData( event ){\n    console.log('cargando');\n\n    setTimeout(() => {\n      if (this.data.length > 50){\n        event.target.complete();\n        // desabilito dinamicamente el infinitescroll\n        this.InfiniteScroll.disabled = true;\n        return;\n      }\n      const nuevoarr = Array(20);\n      this.data.push(...nuevoarr);\n      event.target.complete();\n      // el metodo push agrega datos al array en cuestion es como el .add\n    }, 1000);\n  }\n}\n"],"sourceRoot":"webpack:///"}